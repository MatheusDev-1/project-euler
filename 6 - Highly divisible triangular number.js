// Highly divisible triangular number

// Problem 12

// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

// Let us list the factors of the first seven triangle numbers:

// 1: 1
// 3: 1,3
// 6: 1,2,3,6
// 10: 1,2,5,10
// 15: 1,3,5,15
// 21: 1,3,7,21
// 28: 1,2,4,7,14,28
// We can see that 28 is the first triangle number to have over five divisors.

// What is the value of the first triangle number to have over five hundred divisors?

const findNumberDivisors = (number) => {
    let divisors = [];

    for(i = 0; i <= number; i++) {
        if(number % i === 0) {
            divisors.push(i);
        }
    }

    return {divisors, divisors_quantity: divisors.length};
};

const findNumberWithOver500Divisors = () => {
    for(number = 70000000; number <= 80000000 ; number++) {
        const divisor = findNumberDivisors(number);
        console.log(number, divisor.divisors_quantity)

        if (divisor.divisors_quantity >= 501) {
            console.log(number)
            break;
        }
    }
};

findNumberWithOver500Divisors();